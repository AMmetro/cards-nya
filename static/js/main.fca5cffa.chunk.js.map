{"version":3,"sources":["n1-main/m1-ui/common/SuperComponents/SuperButton/SuperButton.module.css","n1-main/m1-ui/header/Header.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a2-register/Registration.tsx","n1-main/m2-bll/reduxReducer1.ts","n1-main/m2-bll/reduxReducer2.ts","n1-main/m1-ui/common/Profile.tsx","n1-main/m1-ui/common/Eror404.tsx","n1-main/m1-ui/common/Start.tsx","n2-features/f1-auth/a2-register/RecoveryPass.tsx","n2-features/f1-auth/a2-register/ChangePass.tsx","n1-main/m1-ui/common/SuperComponents/SuperInputText/SuperInputTextPresent.tsx","n1-main/m1-ui/common/SuperComponents/SuperInputText/SuperInputTextContainer.tsx","n1-main/m1-ui/common/SuperComponents/SuperButton/SuperButtonContainer.tsx","n1-main/m1-ui/common/Allcomponents.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/common/SuperComponents/SuperInputText/SuperInputText.module.css"],"names":["module","exports","Header","className","to","Login","Registration","initState","value","Profile","store1","useSelector","state","reduxStore1","store2","reduxStore2","dispatch","useDispatch","onClick","type","add","Eror404","Start","RecoveryPass","ChangePass","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","errClass","superInput","e","currentTarget","key","SuperInputTextContainer","useState","text","setText","column","SuperInputTextPresent","alert","SuperButton","red","finalClassName","default","Allcomponents","SuperButtonContainer","PATH","Routes","path","exact","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fca5cffa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"SuperButton_blue__1bZ7C\",\"column\":\"SuperButton_column__1symr\"};","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\n\nfunction Header() {\n\n  return (\n    <div className=\"App\">\n\n        <NavLink to=\"login\">Login</NavLink> &nbsp;\n        <NavLink to=\"registration\">Registration</NavLink> &nbsp;\n        <NavLink to=\"recoveryPass\">RecoveryPass</NavLink> &nbsp;\n        <NavLink to=\"changePass\">ChangePass</NavLink> &nbsp;\n        <NavLink to=\"allComponents\">AllComponents</NavLink> &nbsp;\n        <NavLink to=\"profile\">Profile</NavLink>  <br/>\n\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\n\n\nfunction Login() {\n\n  return (\n    <div className=\"App\">\n     Login\n        <input/>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\n\n\n\n\nfunction Registration() {\n\n  return (\n    <div className=\"App\">\n     Registration form\n    </div>\n  );\n}\n\nexport default Registration;\n","export type initStateType = {value: string};\nconst initState:initStateType = {value:\"friday1\"};\n\nexport const reduxReducer1 = (state = initState, action: reduxAction): initStateType => { // fix any\n    switch (action.type) {\n        case \"addValue1\": {\n            return state={value:action.add};\n        }\n\n        default: return state;\n    }\n};\n\n\ntype reduxAction = {type: string, add:string};\nexport const reduxAC1 = (add:string): any => {return {type:\"addValue1\",add:add}};\n","type initStateType = {value: string};\nconst initState:initStateType = {value:\"friday2\"};\n\nexport const reduxReducer2 = (state = initState, action: reduxAction): initStateType => { // fix any\n    switch (action.type) {\n        case \"addValue2\": {\n            return state={value:action.add};\n        }\n\n        default: return state;\n    }\n};\n\n\ntype reduxAction = {type: string,add:string};\nexport const reduxAC2 = (add:string): any => {return {type:\"addValue2\",add:add}};\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppStoreType} from \"../../m2-bll/store\"\nimport {reduxAC1} from \"../../m2-bll//reduxReducer1\"\nimport {reduxAC2} from \"../../m2-bll//reduxReducer2\"\nimport {initStateType} from \"../../m2-bll//reduxReducer1\"\nimport './App.css';\n\n\nfunction Profile() {\n\n    const store1=useSelector<AppStoreType,initStateType>(state=>state.reduxStore1)\n    const store2=useSelector<AppStoreType,initStateType>(state=>state.reduxStore2)\n    const dispatch=useDispatch()\n\n    const clickHandler1=()=>{\n        dispatch(reduxAC1(\"card1\"))\n    }\n\n    const clickHandler2=()=>{\n        dispatch(reduxAC2(\"card\"))\n    }\n\n        return (\n            <div className=\"App\">\n                    Redux change data\n                    <br/>\n                    {store1.value}\n                    <button onClick={clickHandler1}>click1</button>\n                    <br/>\n                    {store2.value}\n                    <button onClick={clickHandler2}>click2</button>\n\n            </div>\n        );\n    }\n\n\nexport default Profile;\n","import React from 'react';\n\n\nimport './App.css';\n\nfunction Eror404() {\n\n  return (\n    <div className=\"App\">\n      <h1>Page not found</h1>\n    </div>\n  );\n}\n\nexport default Eror404;\n","import React from 'react';\nimport './App.css';\n\nfunction Start() {\n\n  return (\n    <div className=\"App\">\nStart\n    </div>\n  );\n}\n\nexport default Start;\n","import React from 'react';\n\n\n\n\nfunction RecoveryPass() {\n\n  return (\n    <div className=\"App\">\n        Recovery Password\n    </div>\n  );\n}\n\nexport default RecoveryPass;\n","import React from 'react';\n\n\n\n\nfunction ChangePass() {\n\n  return (\n    <div className=\"App\">\n        Change Password\n    </div>\n  );\n}\n\nexport default ChangePass;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {   type,\n        onChange,\n        onChangeText,\n        onKeyPress,\n        onEnter,\n        error,\n        className,\n        spanClassName,\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n        e.key === \"Enter\" && onEnter && onEnter();\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.errorInput} ${error ? s.errClass: s.superInput }`;\n\n    return (\n        <div>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps}\n            />\n\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputTextPresent from \"./SuperInputTextPresent\";\nimport s from \"./SuperInputText.module.css\";\n\n\nfunction SuperInputTextContainer() {\n    const [text, setText] = useState<string>(\"start text\");\n    const error = text ? \"\" : \"error\";\n\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n\n    // const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n\n            <div className={s.column}>\n                <SuperInputTextPresent\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} рабоет смешивание классов\n                />\n\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default SuperInputTextContainer;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = ({red,\n                                                  className,\n     ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n                                                     }\n) => {\n\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, useState} from \"react\";\nimport s from \"./HW4.module.css\";\nimport SuperInputTextContainer from \"./SuperComponents/SuperInputText/SuperInputTextContainer\";\nimport SuperButtonContainer from \"./SuperComponents/SuperButton/SuperButtonContainer\";\n\nfunction Allcomponents() {\n\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n\n    // const showAlert = () => {\n    //     if (error) {\n    //         alert(\"введите текст...\");\n    //     } else {\n    //         alert(text); // если нет ошибки показать текст\n    //     }\n    // }\n\n    // const [checked, setChecked] = useState<boolean>(false);\n    // const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n\n            {/*<div className={s.column}>*/}\n\n            {/*    <SuperInputText*/}\n            {/*        value={text}*/}\n            {/*        onChangeText={setText}*/}\n            {/*        onEnter={showAlert}*/}\n            {/*        error={error}*/}\n            {/*        // className={s.blue} рабоет смешивание классов*/}\n            {/*    />*/}\n\n\n\n                <SuperInputTextContainer/>\n                <SuperButtonContainer/>\n\n\n                {/*<SuperButton*/}\n                {/*    red // пропсу с булевым значением не обязательно указывать true*/}\n                {/*    onClick={showAlert}*/}\n                {/*>*/}\n                {/*    delete /!*/}\n                {/*</SuperButton>*/}\n\n\n\n        </div>\n    );\n}\n\nexport default Allcomponents;\n\n\n\n\n\n\n\n// function Allcomponents() {\n//\n//   return (\n//     <div>\n//         <SuperInputTextContainer/>\n//         <SuperButtonContainer/>\n//\n//     </div>\n//   );\n// }\n//\n// export default Allcomponents;\n","import React from \"react\";\nimport Login from \"../../../n2-features/f1-auth/a1-login/Login\";\nimport Registration from \"../../../n2-features/f1-auth/a2-register/Registration\";\nimport Profile from \"../common/Profile\";\nimport Error404 from \"../common/Eror404\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Start from \"../common/Start\";\nimport RecoveryPass from \"../../../n2-features/f1-auth/a2-register/RecoveryPass\";\nimport ChangePass from \"../../../n2-features/f1-auth/a2-register/ChangePass\";\nimport Allcomponents from \"../common/Allcomponents\";\n\n\n\nexport const PATH = {\n    START: \"/start\",\n    REDUX: \"/redux\",\n    LOGIN: \"/login\",\n    REGISTRATION: \"/registration\",\n    RECPASS: \"/recoveryPass\",\n    CHANGEPASS: \"/changePass\",\n    ALLCOMP: \"/allComponents\",\n    PRIFILE: \"/profile\",\n}\n\nfunction Routes() {\n    return (\n        <div>\n\n          <Switch>\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.START}/>}/>\n\n            <Route path={PATH.START} render={() => <Start/>}/>\n            <Route path={PATH.LOGIN} render={() => <Login/>}/>\n            <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\n            <Route path={PATH.RECPASS} render={() => <RecoveryPass/>}/>\n            <Route path={PATH.CHANGEPASS} render={() => <ChangePass/>}/>\n            <Route path={PATH.ALLCOMP} render={() => <Allcomponents/>}/>\n            <Route path={PATH.PRIFILE} render={() => <Profile/>}/>\n\n            <Route render={() => <Error404/>}/>\n\n          </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from 'react';\nimport Header from './header/Header';\nimport {HashRouter} from \"react-router-dom\";\nimport Routes from \"./routes/Routes\";\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n        <HashRouter>\n          <Header/>\n          <Routes/>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware, Store} from \"redux\"\nimport * as React from \"react\"\nimport { render } from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport thunk from \"redux-thunk\"\n\nimport {reduxReducer1} from \"./reduxReducer1\";\nimport {reduxReducer2} from \"./reduxReducer2\";\n\nconst reducers = combineReducers({\n    reduxStore1: reduxReducer1,\n    reduxStore2: reduxReducer2   \n});\n\nconst store = createStore(reducers);\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store; // for dev\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./n1-main/m2-bll/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"SuperInputText_blue__12OSA\",\"column\":\"SuperInputText_column__2OG9T\"};"],"sourceRoot":""}